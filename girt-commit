#!/bin/dash

# Check if the repository has been initialised
if [ ! -d "./.girt" ]; then
    echo "$0: error: girt repository directory .girt not found"
    exit 1
fi

# Check for the number of arguments and whether options were given
if [ $# -eq 2 ]; then
    # -a option not given
    if [ "$1" = "-m" ]; then
        message=$2
    else
        echo "usage: girt-commit [-a] -m commit-message"
        exit 1
    fi
elif [ $# -eq 3 ]; then
    # -a option was given
    if [ "$1" = "-a" ] && [ "$2" = "-m" ]; then
        message=$3
        # For all files in index, copy their contents from the current directory into the index
        for file in `ls ./.girt/index`; do
            cp "$file" "./.girt/index/"
        done
    else
        echo "usage: girt-commit [-a] -m commit-message"
        exit 1
    fi
else
    # Incorrect number  of arguments given
    echo "usage: girt-commit [-a] -m commit-message"
    exit 1
fi

# Find the number of commits in the repository
count=0
for commit in `ls -d ./.girt/.commit.* 2> /dev/null`; do
    count=$((count+1))
done

if [ $count -eq 0 ]; then
    # This is our initial commit
    # Create the commit directory
    mkdir "./.girt/.commit.$count"
    # Loop through each file in our index folder
    for f1 in `ls ./.girt/index`; do
        # Copy each file into the commit directory
        cp "./.girt/index/$f1" "./.girt/.commit.$count/$f1"
    done
    # Indicate to the user that this has been successful and update the log
    echo "Committed as commit $count"
    echo "$count $message" > "./.girt/log.txt"
else
    # Commit director[y][ies] already exist, so we need to compare files from previous commit
    # Compare each file in index to the previous commit directory
    different=0
    for f2 in `ls ./.girt/index`; do
        if cmp -s "./.girt/index/$f2" "./.girt/.commit.$((count-1))/$f2"; then
            # File in index and previous commit are the same
            continue
        else
            # File in index and previous commit are different, so break
            different=1
            break
        fi
    done

    if [ $different -eq 0 ]; then
        # Nothing is different, so no need to commit
        echo "nothing to commit"
        exit 1
    else
        # Create a new commit repository
        mkdir "./.girt/.commit.$count"
        # Loop through each file in our index folder
        for f3 in `ls ./.girt/index`; do
            # Copy each file into the commit directory
            cp "./.girt/index/$f3" "./.girt/.commit.$count/$f1"
        done
        # Indicate to the user that this has been successful and update the log
        echo "Committed as commit $count"
        contents=$(cat "./.girt/log.txt")
        echo "$count $message" > "./.girt/log.txt"
        echo "$contents" >> "./.girt/log.txt"
    fi
fi
